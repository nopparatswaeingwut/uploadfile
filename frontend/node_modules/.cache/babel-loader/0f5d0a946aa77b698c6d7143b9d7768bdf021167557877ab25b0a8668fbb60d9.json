{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  name: 'UploadPage',\n  data() {\n    return {\n      selectedFiles: []\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      // เก็บไฟล์ที่ถูกเลือก\n      this.selectedFiles = Array.from(event.target.files);\n    },\n    handleDrop(event) {\n      // เก็บไฟล์ที่ถูกลากและปล่อย\n      const files = Array.from(event.dataTransfer.files);\n      this.selectedFiles = [...this.selectedFiles, ...files]; // เพิ่มไฟล์ที่ถูกลากลงไปใน selectedFiles\n    },\n    isImage(file) {\n      // ตรวจสอบว่าไฟล์เป็นภาพหรือไม่\n      return file && file['type'].split('/')[0] === 'image';\n    },\n    isVideo(file) {\n      // ตรวจสอบว่าไฟล์เป็นวิดีโอหรือไม่\n      return file && file['type'].split('/')[0] === 'video';\n    },\n    createObjectURL(file) {\n      // สร้าง URL สำหรับไฟล์ที่เลือก\n      return URL.createObjectURL(file);\n    },\n    truncateFileName(fileName) {\n      // เปลี่ยนชื่อไฟล์ที่ยาวเกิน 15 ตัวอักษรให้แสดงเป็นรูปแบบย่อ\n      return fileName.length > 15 ? fileName.slice(0, 15) + '...' : fileName;\n    },\n    async submitFiles() {\n      if (!this.selectedFiles.length) return;\n      const formData = new FormData();\n      this.selectedFiles.forEach(file => {\n        formData.append('files[]', file);\n      });\n      try {\n        // ส่งไฟล์ไปยังเซิร์ฟเวอร์ (ปรับ URL ตามที่ต้องการ)\n        const response = await fetch('YOUR_UPLOAD_URL_HERE', {\n          method: 'POST',\n          body: formData\n        });\n        if (response.ok) {\n          alert('Files uploaded successfully!');\n          this.selectedFiles = []; // เคลียร์รายการไฟล์หลังจากอัปโหลดสำเร็จ\n        } else {\n          alert('File upload failed!');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        alert('File upload failed!');\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","selectedFiles","methods","handleFileUpload","event","Array","from","target","files","handleDrop","dataTransfer","isImage","file","split","isVideo","createObjectURL","URL","truncateFileName","fileName","length","slice","submitFiles","formData","FormData","forEach","append","response","fetch","method","body","ok","alert","error","console"],"sources":["C:\\Users\\sodat\\Desktop\\upload\\frontend\\src\\components\\uploadPage.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2>Upload Files</h2>\n    <div \n      class=\"border border-dashed p-5 text-center mb-3\" \n      @dragover.prevent \n      @drop.prevent=\"handleDrop\"\n      @click=\"$refs.fileInput.click()\"\n    >\n      <p>ลากไฟล์ไปที่นี่ หรือ <strong>คลิกเพื่อเลือกไฟล์</strong></p>\n      <input \n        type=\"file\" \n        class=\"d-none\" \n        ref=\"fileInput\" \n        @change=\"handleFileUpload\" \n        multiple\n      >\n      \n      <!-- แสดงภาพตัวอย่างไฟล์ที่เลือก -->\n      <div class=\"preview-area mt-3\">\n        <div class=\"file-preview-container\">\n          <div v-for=\"(file, index) in selectedFiles\" :key=\"index\" class=\"file-preview\">\n            <div v-if=\"isImage(file)\">\n              <img :src=\"createObjectURL(file)\" alt=\"Image preview\" class=\"img-thumbnail\" style=\"max-width: 100px; max-width: 100px;\">\n            </div>\n            <div v-else-if=\"isVideo(file)\">\n              <img src=\"path/to/video-icon.png\" alt=\"Video file\" class=\"img-thumbnail\" style=\"max-width: 100px;\">\n            </div>\n            <div v-else>\n              <img src=\"path/to/file-icon.png\" alt=\"Other file\" class=\"img-thumbnail\" style=\"max-width: 100px;\">\n            </div>\n            <p>{{ truncateFileName(file.name) }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <button class=\"btn btn-primary\" @click=\"submitFiles\" :disabled=\"!selectedFiles.length\">อัพโหลดไฟล์</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'UploadPage',\n  data() {\n    return {\n      selectedFiles: []\n    };\n  },\n  methods: {\n    handleFileUpload(event) {\n      // เก็บไฟล์ที่ถูกเลือก\n      this.selectedFiles = Array.from(event.target.files);\n    },\n    handleDrop(event) {\n      // เก็บไฟล์ที่ถูกลากและปล่อย\n      const files = Array.from(event.dataTransfer.files);\n      this.selectedFiles = [...this.selectedFiles, ...files]; // เพิ่มไฟล์ที่ถูกลากลงไปใน selectedFiles\n    },\n    isImage(file) {\n      // ตรวจสอบว่าไฟล์เป็นภาพหรือไม่\n      return file && file['type'].split('/')[0] === 'image';\n    },\n    isVideo(file) {\n      // ตรวจสอบว่าไฟล์เป็นวิดีโอหรือไม่\n      return file && file['type'].split('/')[0] === 'video';\n    },\n    createObjectURL(file) {\n      // สร้าง URL สำหรับไฟล์ที่เลือก\n      return URL.createObjectURL(file);\n    },\n    truncateFileName(fileName) {\n      // เปลี่ยนชื่อไฟล์ที่ยาวเกิน 15 ตัวอักษรให้แสดงเป็นรูปแบบย่อ\n      return fileName.length > 15 ? fileName.slice(0, 15) + '...' : fileName;\n    },\n    async submitFiles() {\n      if (!this.selectedFiles.length) return;\n\n      const formData = new FormData();\n      this.selectedFiles.forEach(file => {\n        formData.append('files[]', file);\n      });\n\n      try {\n        // ส่งไฟล์ไปยังเซิร์ฟเวอร์ (ปรับ URL ตามที่ต้องการ)\n        const response = await fetch('YOUR_UPLOAD_URL_HERE', {\n          method: 'POST',\n          body: formData\n        });\n\n        if (response.ok) {\n          alert('Files uploaded successfully!');\n          this.selectedFiles = []; // เคลียร์รายการไฟล์หลังจากอัปโหลดสำเร็จ\n        } else {\n          alert('File upload failed!');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        alert('File upload failed!');\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.container {\n  max-width: 600px;\n}\n.file-preview-container {\n  display: flex;\n  overflow-x: auto; /* สร้างสไลด์เพื่อเลื่อนดู */\n  padding: 10px 0;\n  scrollbar-width: thin; /* ใช้สำหรับ Firefox */\n}\n.file-preview {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-right: 10px; /* ระยะห่างระหว่างไฟล์ */\n}\n.img-thumbnail {\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n.preview-area {\n  max-height: 120px; /* ความสูงของพื้นที่ตัวอย่าง */\n}\n</style>\n"],"mappings":";;;AA0CA,eAAe;EACbA,IAAI,EAAE,YAAY;EAClBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB;MACA,IAAI,CAACH,aAAY,GAAII,KAAK,CAACC,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IACrD,CAAC;IACDC,UAAUA,CAACL,KAAK,EAAE;MAChB;MACA,MAAMI,KAAI,GAAIH,KAAK,CAACC,IAAI,CAACF,KAAK,CAACM,YAAY,CAACF,KAAK,CAAC;MAClD,IAAI,CAACP,aAAY,GAAI,CAAC,GAAG,IAAI,CAACA,aAAa,EAAE,GAAGO,KAAK,CAAC,EAAE;IAC1D,CAAC;IACDG,OAAOA,CAACC,IAAI,EAAE;MACZ;MACA,OAAOA,IAAG,IAAKA,IAAI,CAAC,MAAM,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,OAAO;IACvD,CAAC;IACDC,OAAOA,CAACF,IAAI,EAAE;MACZ;MACA,OAAOA,IAAG,IAAKA,IAAI,CAAC,MAAM,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,OAAO;IACvD,CAAC;IACDE,eAAeA,CAACH,IAAI,EAAE;MACpB;MACA,OAAOI,GAAG,CAACD,eAAe,CAACH,IAAI,CAAC;IAClC,CAAC;IACDK,gBAAgBA,CAACC,QAAQ,EAAE;MACzB;MACA,OAAOA,QAAQ,CAACC,MAAK,GAAI,EAAC,GAAID,QAAQ,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,IAAI,KAAI,GAAIF,QAAQ;IACxE,CAAC;IACD,MAAMG,WAAWA,CAAA,EAAG;MAClB,IAAI,CAAC,IAAI,CAACpB,aAAa,CAACkB,MAAM,EAAE;MAEhC,MAAMG,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/B,IAAI,CAACtB,aAAa,CAACuB,OAAO,CAACZ,IAAG,IAAK;QACjCU,QAAQ,CAACG,MAAM,CAAC,SAAS,EAAEb,IAAI,CAAC;MAClC,CAAC,CAAC;MAEF,IAAI;QACF;QACA,MAAMc,QAAO,GAAI,MAAMC,KAAK,CAAC,sBAAsB,EAAE;UACnDC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEP;QACR,CAAC,CAAC;QAEF,IAAII,QAAQ,CAACI,EAAE,EAAE;UACfC,KAAK,CAAC,8BAA8B,CAAC;UACrC,IAAI,CAAC9B,aAAY,GAAI,EAAE,EAAE;QAC3B,OAAO;UACL8B,KAAK,CAAC,qBAAqB,CAAC;QAC9B;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9BD,KAAK,CAAC,qBAAqB,CAAC;MAC9B;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}